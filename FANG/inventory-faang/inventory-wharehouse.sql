-- Create Table Statement
CREATE TABLE InventoryTransactions (
    ID VARCHAR(10),
    OnHandQuantity INT,
    OnHandQuantityDelta INT,
    event_type VARCHAR(10),
    event_datetime timestamp
);

-- Insert Statements
INSERT INTO InventoryTransactions (ID, OnHandQuantity, OnHandQuantityDelta, event_type, event_datetime)
VALUES
('TR0013', 278, 99, 'OutBound', '2020-05-25 00:25:00'),
('TR0012', 377, 31, 'InBound', '2020-05-24 22:00:00'),
('TR0011', 346, 1, 'OutBound', '2020-05-24 15:01:00'),
('TR0010', 346, 1, 'OutBound', '2020-05-23 05:00:00'),
('TR009', 348, 102, 'InBound', '2020-04-25 18:00:00'),
('TR008', 246, 43, 'InBound', '2020-04-25 02:00:00'),
('TR007', 203, 2, 'OutBound', '2020-02-25 09:00:00'),
('TR006', 205, 129, 'OutBound', '2020-02-18 07:00:00'),
('TR005', 334, 1, 'OutBound', '2020-02-18 08:00:00'),
('TR004', 335, 27, 'OutBound', '2020-01-29 05:00:00'),
('TR003', 362, 120, 'InBound', '2019-12-31 02:00:00'),
('TR002', 242, 8, 'OutBound', '2019-05-22 00:50:00'),
('TR001', 250, 250, 'InBound', '2019-05-20 00:45:00');

WITH
	WH AS (
		SELECT
			*
		FROM
			INVENTORYTRANSACTIONS
		ORDER BY
			EVENT_DATETIME DESC
	),
	DAYS AS (
		SELECT
			ONHANDQUANTITY,
			EVENT_DATETIME,
			(EVENT_DATETIME - INTERVAL '90 days') AS DAY90,
			(EVENT_DATETIME - INTERVAL '180 days') AS DAY180,
			(EVENT_DATETIME - INTERVAL '270 days') AS DAY270,
			(EVENT_DATETIME - INTERVAL '365 days') AS DAY365
		FROM
			WH
		LIMIT
			1
	),
	INV_90_DAYS AS (
		SELECT
			COALESCE(SUM(ONHANDQUANTITYDELTA), 0) AS DAYS_OLD_90
		FROM
			WH
			CROSS JOIN DAYS D
		WHERE
			EVENT_TYPE = 'InBound'
			AND WH.EVENT_DATETIME >= D.DAY90
	),
	FINAL_90DAYS AS (
		SELECT
			CASE
				WHEN DAYS_OLD_90 < ONHANDQUANTITY THEN DAYS_OLD_90
				ELSE ONHANDQUANTITY
			END DAYS_OLD_90
		FROM
			INV_90_DAYS
			CROSS JOIN DAYS
	),
	INV_180_DAYS AS (
		SELECT
			COALESCE(SUM(ONHANDQUANTITYDELTA), 0) AS DAYS_OLD_180
		FROM
			WH
			CROSS JOIN DAYS D
		WHERE
			EVENT_TYPE = 'InBound'
			AND WH.EVENT_DATETIME BETWEEN D.DAY180 AND D.DAY90
	),
	FINAL_180DAYS AS (
		SELECT
			CASE
				WHEN DAYS_OLD_180 < (ONHANDQUANTITY - DAYS_OLD_90) THEN DAYS_OLD_180
				ELSE ONHANDQUANTITY - DAYS_OLD_90
			END DAYS_OLD_180
		FROM
			INV_180_DAYS
			CROSS JOIN DAYS
			CROSS JOIN FINAL_90DAYS
	),
	INV_270_DAYS AS (
		SELECT
			COALESCE(SUM(ONHANDQUANTITYDELTA), 0) AS DAYS_OLD_270
		FROM
			WH
			CROSS JOIN DAYS D
		WHERE
			EVENT_TYPE = 'InBound'
			AND WH.EVENT_DATETIME BETWEEN D.DAY270 AND D.DAY180
	),
	FINAL_270DAYS AS (
		SELECT
			CASE
				WHEN DAYS_OLD_270 < (ONHANDQUANTITY - DAYS_OLD_90) THEN DAYS_OLD_270
				ELSE ONHANDQUANTITY - DAYS_OLD_90 - DAYS_OLD_180
			END DAYS_OLD_270
		FROM
			INV_270_DAYS
			CROSS JOIN DAYS
			CROSS JOIN FINAL_90DAYS
			CROSS JOIN FINAL_180DAYS
	),
	INV_365_DAYS AS (
		SELECT
			COALESCE(SUM(ONHANDQUANTITYDELTA), 0) AS DAYS_OLD_365
		FROM
			WH
			CROSS JOIN DAYS D
		WHERE
			EVENT_TYPE = 'InBound'
			AND WH.EVENT_DATETIME BETWEEN D.DAY365 AND D.DAY270
	),
	FINAL_365DAYS AS (
		SELECT
			CASE
				WHEN DAYS_OLD_365 < (ONHANDQUANTITY - DAYS_OLD_90 - DAYS_OLD_270) THEN DAYS_OLD_365
				ELSE ONHANDQUANTITY - DAYS_OLD_90 - DAYS_OLD_180 - DAYS_OLD_270
			END DAYS_OLD_365
		FROM
			INV_365_DAYS
			CROSS JOIN DAYS
			CROSS JOIN FINAL_90DAYS
			CROSS JOIN FINAL_180DAYS
			CROSS JOIN FINAL_270DAYS
	)
SELECT
	DAYS_OLD_90 AS "0-90 days old",
	DAYS_OLD_180 AS "91-180 days old",
	DAYS_OLD_270 AS "181-270 days old",
	DAYS_OLD_365 AS "271-365 days old"
FROM
	FINAL_90DAYS
	CROSS JOIN FINAL_180DAYS
	CROSS JOIN FINAL_270DAYS
	CROSS JOIN FINAL_365DAYS

















